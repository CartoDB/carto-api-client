name: CI

on:
  push:
    branches: [main]
    tags: [v*]

  pull_request:
    branches: [main]

jobs:
  build:
    name: Build [Node.js ${{ matrix.node-version }}]
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      ##########################################################################
      # Build
      ##########################################################################

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install
        run: yarn install

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      ##########################################################################
      # Publish
      ##########################################################################

      - name: Check tag format
        id: check-tag-format
        if: startsWith(github.ref, 'refs/tags/')
        uses: nowsprinting/check-version-format-action@v4
        with:
          prefix: 'v'

      - name: Exit on invalid tag format
        if: startsWith(github.ref, 'refs/tags/') && steps.check-tag-format.outputs.is_valid == 'false'
        run: echo "Tag must follow SemVer convention. Aborting." && exit 1

      - name: Get release type
        if: startsWith(github.ref, 'refs/tags/')
        id: get-release-type
        uses: actions/github-script@v7
        with:
          script: |
            const regex = /(alpha|beta)/
            const refName = context.ref.replace('refs/tags/', '')
            console.log(`Ref tag: ${refName}`)
            const releaseTypeMatch = refName.match(regex)
            if (!releaseTypeMatch) {
              releaseType = 'latest'
            } else {
              releaseType =  releaseTypeMatch[0]
            }
            console.log(`Release type: ${releaseType}`)
            return releaseType

      - name: Configure yarn to publish packages
        if: startsWith(github.ref, 'refs/tags/')
        env:
          # The following token has been manually issued in the CartoDB
          # organization for npmjs.com
          NODE_AUTH_TOKEN: ${{ secrets.NPM_CARTODB_AUTH_TOKEN }}
        run: |
          yarn config set npmPublishRegistry "https://registry.npmjs.org/"
          yarn config set npmAuthToken "${NODE_AUTH_TOKEN}"

      - name: Publish package
        if: startsWith(github.ref, 'refs/tags/')
        env:
          RELEASE_TYPE: ${{ steps.get-release-type.outputs.result }}
        run: yarn npm publish --tag ${RELEASE_TYPE}
